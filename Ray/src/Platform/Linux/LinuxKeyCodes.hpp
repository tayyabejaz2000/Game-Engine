#pragma once

#include "Events/KeyCodes.hpp"
#include "Events/MouseCodes.hpp"
#include <GLFW/glfw3.h>

namespace Ray
{
  static Key GLFW_Key_Codes[] = {
      [GLFW_KEY_SPACE - 32] = Key::KEY_SPACE,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      [GLFW_KEY_APOSTROPHE - 32] = Key::KEY_APOSTROPHE,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      [GLFW_KEY_COMMA - 32] = Key::KEY_COMMA,
      [GLFW_KEY_MINUS - 32] = Key::KEY_MINUS,
      [GLFW_KEY_PERIOD - 32] = Key::KEY_PERIOD,
      [GLFW_KEY_SLASH - 32] = Key::KEY_SLASH,

      [GLFW_KEY_0 - 32] = Key::KEY_0,
      [GLFW_KEY_1 - 32] = Key::KEY_1,
      [GLFW_KEY_2 - 32] = Key::KEY_2,
      [GLFW_KEY_3 - 32] = Key::KEY_3,
      [GLFW_KEY_4 - 32] = Key::KEY_4,
      [GLFW_KEY_5 - 32] = Key::KEY_5,
      [GLFW_KEY_6 - 32] = Key::KEY_6,
      [GLFW_KEY_7 - 32] = Key::KEY_7,
      [GLFW_KEY_8 - 32] = Key::KEY_8,
      [GLFW_KEY_9 - 32] = Key::KEY_9,
      (Key)0,
      [GLFW_KEY_SEMICOLON - 32] = Key::KEY_SEMICOLON,
      (Key)0,
      [GLFW_KEY_EQUAL - 32] = Key::KEY_EQUAL,
      (Key)0,
      (Key)0,
      (Key)0,

      [GLFW_KEY_A - 32] = Key::KEY_A,
      [GLFW_KEY_B - 32] = Key::KEY_B,
      [GLFW_KEY_C - 32] = Key::KEY_C,
      [GLFW_KEY_D - 32] = Key::KEY_D,
      [GLFW_KEY_E - 32] = Key::KEY_E,
      [GLFW_KEY_F - 32] = Key::KEY_F,
      [GLFW_KEY_G - 32] = Key::KEY_G,
      [GLFW_KEY_H - 32] = Key::KEY_H,
      [GLFW_KEY_I - 32] = Key::KEY_I,
      [GLFW_KEY_J - 32] = Key::KEY_J,
      [GLFW_KEY_K - 32] = Key::KEY_K,
      [GLFW_KEY_L - 32] = Key::KEY_L,
      [GLFW_KEY_M - 32] = Key::KEY_M,
      [GLFW_KEY_N - 32] = Key::KEY_N,
      [GLFW_KEY_O - 32] = Key::KEY_O,
      [GLFW_KEY_P - 32] = Key::KEY_P,
      [GLFW_KEY_Q - 32] = Key::KEY_Q,
      [GLFW_KEY_R - 32] = Key::KEY_R,
      [GLFW_KEY_S - 32] = Key::KEY_S,
      [GLFW_KEY_T - 32] = Key::KEY_T,
      [GLFW_KEY_U - 32] = Key::KEY_U,
      [GLFW_KEY_V - 32] = Key::KEY_V,
      [GLFW_KEY_W - 32] = Key::KEY_W,
      [GLFW_KEY_X - 32] = Key::KEY_X,
      [GLFW_KEY_Y - 32] = Key::KEY_Y,
      [GLFW_KEY_Z - 32] = Key::KEY_Z,

      [GLFW_KEY_LEFT_BRACKET - 32] = Key::KEY_LEFT_BRACKET,
      [GLFW_KEY_BACKSLASH - 32] = Key::KEY_BACKSLASH,
      [GLFW_KEY_RIGHT_BRACKET - 32] = Key::KEY_RIGHT_BRACKET,
      (Key)0,
      (Key)0,
      [GLFW_KEY_GRAVE_ACCENT - 32] = Key::KEY_GRAVE_ACCENT,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      [GLFW_KEY_WORLD_1 - 32] = Key::KEY_WORLD_1,
      [GLFW_KEY_WORLD_2 - 32] = Key::KEY_WORLD_2,

      [GLFW_KEY_ESCAPE - 125] = Key::KEY_ESCAPE,
      [GLFW_KEY_ENTER - 125] = Key::KEY_ENTER,
      [GLFW_KEY_TAB - 125] = Key::KEY_TAB,
      (Key)0,

      [GLFW_KEY_INSERT - 125] = Key::KEY_INSERT,
      [GLFW_KEY_DELETE - 125] = Key::KEY_DELETE,

      [GLFW_KEY_RIGHT - 125] = Key::KEY_RIGHT,
      [GLFW_KEY_LEFT - 125] = Key::KEY_LEFT,
      [GLFW_KEY_DOWN - 125] = Key::KEY_DOWN,
      [GLFW_KEY_UP - 125] = Key::KEY_UP,

      [GLFW_KEY_PAGE_UP - 125] = Key::KEY_PAGE_UP,
      [GLFW_KEY_PAGE_DOWN - 125] = Key::KEY_PAGE_DOWN,
      [GLFW_KEY_HOME - 125] = Key::KEY_HOME,
      [GLFW_KEY_END - 125] = Key::KEY_END,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      [GLFW_KEY_CAPS_LOCK - 125] = Key::KEY_CAPS_LOCK,
      [GLFW_KEY_SCROLL_LOCK - 125] = Key::KEY_SCROLL_LOCK,
      [GLFW_KEY_NUM_LOCK - 125] = Key::KEY_NUM_LOCK,

      [GLFW_KEY_PRINT_SCREEN - 125] = Key::KEY_PRINT_SCREEN,
      [GLFW_KEY_PAUSE - 125] = Key::KEY_PAUSE,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      [GLFW_KEY_F1 - 125] = Key::KEY_F1,
      [GLFW_KEY_F2 - 125] = Key::KEY_F2,
      [GLFW_KEY_F3 - 125] = Key::KEY_F3,
      [GLFW_KEY_F4 - 125] = Key::KEY_F4,
      [GLFW_KEY_F5 - 125] = Key::KEY_F5,
      [GLFW_KEY_F6 - 125] = Key::KEY_F6,
      [GLFW_KEY_F7 - 125] = Key::KEY_F7,
      [GLFW_KEY_F8 - 125] = Key::KEY_F8,
      [GLFW_KEY_F9 - 125] = Key::KEY_F9,
      [GLFW_KEY_F10 - 125] = Key::KEY_F10,
      [GLFW_KEY_F11 - 125] = Key::KEY_F11,
      [GLFW_KEY_F12 - 125] = Key::KEY_F12,
      [GLFW_KEY_F13 - 125] = Key::KEY_F13,
      [GLFW_KEY_F14 - 125] = Key::KEY_F14,
      [GLFW_KEY_F15 - 125] = Key::KEY_F15,
      [GLFW_KEY_F16 - 125] = Key::KEY_F16,
      [GLFW_KEY_F17 - 125] = Key::KEY_F17,
      [GLFW_KEY_F18 - 125] = Key::KEY_F18,
      [GLFW_KEY_F19 - 125] = Key::KEY_F19,
      [GLFW_KEY_F20 - 125] = Key::KEY_F20,
      [GLFW_KEY_F21 - 125] = Key::KEY_F21,
      [GLFW_KEY_F22 - 125] = Key::KEY_F22,
      [GLFW_KEY_F23 - 125] = Key::KEY_F23,
      [GLFW_KEY_F24 - 125] = Key::KEY_F24,
      [GLFW_KEY_F25 - 125] = Key::KEY_F25,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      (Key)0,
      [GLFW_KEY_KP_0 - 125] = Key::KEY_KP_0,
      [GLFW_KEY_KP_1 - 125] = Key::KEY_KP_1,
      [GLFW_KEY_KP_2 - 125] = Key::KEY_KP_2,
      [GLFW_KEY_KP_3 - 125] = Key::KEY_KP_3,
      [GLFW_KEY_KP_4 - 125] = Key::KEY_KP_4,
      [GLFW_KEY_KP_5 - 125] = Key::KEY_KP_5,
      [GLFW_KEY_KP_6 - 125] = Key::KEY_KP_6,
      [GLFW_KEY_KP_7 - 125] = Key::KEY_KP_7,
      [GLFW_KEY_KP_8 - 125] = Key::KEY_KP_8,
      [GLFW_KEY_KP_9 - 125] = Key::KEY_KP_9,

      [GLFW_KEY_KP_DECIMAL - 125] = Key::KEY_KP_DECIMAL,
      [GLFW_KEY_KP_DIVIDE - 125] = Key::KEY_KP_DIVIDE,
      [GLFW_KEY_KP_MULTIPLY - 125] = Key::KEY_KP_MULTIPLY,
      [GLFW_KEY_KP_SUBTRACT - 125] = Key::KEY_KP_SUBTRACT,
      [GLFW_KEY_KP_ADD - 125] = Key::KEY_KP_ADD,
      [GLFW_KEY_KP_ENTER - 125] = Key::KEY_KP_ENTER,
      [GLFW_KEY_KP_EQUAL - 125] = Key::KEY_KP_EQUAL,
      (Key)0,
      (Key)0,
      (Key)0,
      [GLFW_KEY_LEFT_SHIFT - 125] = Key::KEY_LEFT_SHIFT,
      [GLFW_KEY_LEFT_CONTROL - 125] = Key::KEY_LEFT_CONTROL,
      [GLFW_KEY_LEFT_ALT - 125] = Key::KEY_LEFT_ALT,
      [GLFW_KEY_LEFT_SUPER - 125] = Key::KEY_LEFT_SUPER,

      [GLFW_KEY_RIGHT_SHIFT - 125] = Key::KEY_RIGHT_SHIFT,
      [GLFW_KEY_RIGHT_CONTROL - 125] = Key::KEY_RIGHT_CONTROL,
      [GLFW_KEY_RIGHT_ALT - 125] = Key::KEY_RIGHT_ALT,
      [GLFW_KEY_RIGHT_SUPER - 125] = Key::KEY_RIGHT_SUPER,

      [GLFW_KEY_MENU - 125] = Key::KEY_MENU,
  };

  static const MouseButton GLFW_Mouse_Codes[] = {
      [GLFW_MOUSE_BUTTON_1] = MouseButton::BUTTON_1,
      [GLFW_MOUSE_BUTTON_2] = MouseButton::BUTTON_2,
      [GLFW_MOUSE_BUTTON_3] = MouseButton::BUTTON_3,
      [GLFW_MOUSE_BUTTON_4] = MouseButton::BUTTON_4,
      [GLFW_MOUSE_BUTTON_5] = MouseButton::BUTTON_5,
      [GLFW_MOUSE_BUTTON_6] = MouseButton::BUTTON_6,
      [GLFW_MOUSE_BUTTON_7] = MouseButton::BUTTON_7,
      [GLFW_MOUSE_BUTTON_8] = MouseButton::BUTTON_8,
  };

  static const KeyModifier GLFW_Key_Mods[] = {
      [GLFW_MOD_SHIFT >> 1] = KeyModifier::ALT,
      [GLFW_MOD_CONTROL >> 1] = KeyModifier::ALT,
      [GLFW_MOD_ALT >> 1] = KeyModifier::ALT,
      KeyModifier::NO_MODIFIER,
      [GLFW_MOD_SUPER >> 1] = KeyModifier::ALT,
  };

  inline const Key RayKeyCast(int32_t glfw_key)
  {
    return (const Key)((glfw_key == GLFW_KEY_UNKNOWN) ? Key::KEY_UNKNOWN : GLFW_Key_Codes[glfw_key - ((glfw_key > 255) ? 125 : 32)]);
  }
  inline const KeyModifier RayKeyModifierCast(int32_t glfw_mod)
  {
    return (const KeyModifier)((glfw_mod == 0) ? KeyModifier::NO_MODIFIER : GLFW_Key_Mods[glfw_mod >> 1]);
  }
  inline const MouseButton RayMouseButtonCast(int32_t glfw_mouse_button)
  {
    return (const MouseButton)GLFW_Mouse_Codes[glfw_mouse_button];
  }
}